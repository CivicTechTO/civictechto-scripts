# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

workflows:
  version: 2

  nightly:
    jobs:
      - update_meetup
      - update_member_roster
    triggers:
      - schedule:
          # Every night at 4am ET
          cron: "0 9 * * *"
          filters:
            branches:
              only: master

  day_before:
    jobs:
      - create_attendee_flashcards
    triggers:
      - schedule:
          # Every Mon evening at 6pm ET
          cron: "0 22 * * 1"
          filters:
            branches:
              only: master

  pre_hacknight:
    jobs:
      - reset_pitches
      - move_stale_pitches
    triggers:
      - schedule:
          # Every Tues evening at 6pm ET
          cron: "0 22 * * 2"
          filters:
            branches:
              only: master

  post_hacknight:
    jobs:
      - save_pitch_data
      - notify_slack_pitches:
          requires:
            - save_pitch_data
      #- backup_trello
      - announce_booking_status
    triggers:
      - schedule:
          # Every Wed morning at 4am ET
          cron: "0 8 * * 3"
          filters:
            branches:
              only: master

version: 2

jobs:
  default: &default_job
    docker:
      - image: circleci/python:3.6.4
    # See sample.env file for full details
    environment:
        # Used to ignore cleaning CT101 card from pitch list, but seems better
        # to repopulate list manually each week
      - TRELLO_CARD_IGNORE_LIST: ""
        # For channel: #general
      - SLACK_ANNOUNCE_CHANNEL_PUB: C04TJ34KG
        # For channel: #organizing-open
      - SLACK_ANNOUNCE_CHANNEL_ORG: C4SHX39B2
      - MAILCHIMP_API_USER: patcon_
      # Testing list for now
      - MAILCHIMP_LIST_ID: 9ad4b62fac
      # See: https://us11.admin.mailchimp.com/templates/design?tid=364745
      - MAILCHIMP_TEMPLATE_ID: 364745
      # Section to replace with project data in template above
      - MAILCHIMP_SECTION_NAME: projects

        # For the following sensitive envvars, check the CircleCI UI.
        #   - GITHUB_ACCESS_TOKEN
        #   - SLACK_API_TOKEN
        #   - TRELLO_APP_KEY
        #   - TRELLO_SECRET
        #   - MAILCHIMP_API_KEY
        #
        # See: https://circleci.com/gh/CivicTechTO/civictechto-scripts/edit#env-vars
    steps:
      - checkout

      - run: &decrypt_files
          name: decrypt files
          command: |
            openssl aes-256-cbc -k "$TRELLO_SECRET" -in service-key.json.enc -out service-key.json -d

      - restore_cache: &restore_cache
          keys:
          - cache-{{ checksum "Pipfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - cache-

      - run: &install_dependencies
          name: install dependencies
          command: |
            pipenv sync --dev

      - save_cache: &save_cache
          key: cache-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache

  reset_pitches:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            # Move from list "Tonight's Pitches" to "Recent Pitches"
            pipenv run python move_trello_cards.py --verbose \
              --from-list "58e158f29b0ae02ab71b9a87" \
              --to-list "58e158eba6846a4fb012404c" \

  move_stale_pitches:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            # Move stale cards from list "Recent Pitches" to "Not Pitched Recently"
            pipenv run python move_trello_cards.py --verbose \
              --from-list "58e158eba6846a4fb012404c" \
              --to-list "58f00f6a5b08f3b8b02aa673" \
              --older-than "30" \

  backup_trello:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            pipenv run python backup_trello.py

  save_pitch_data:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            pipenv run python update_pitch_csv.py

  notify_slack_pitches:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            pipenv run python notify_slack_pitches.py

  update_meetup:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          # Meetup key set as envvar CTTO_MEETUP_API_KEY
          command: |
            pipenv run python scripts/gsheet2meetup.py --yes --verbose \
              --meetup-group-slug "Civic-Tech-Toronto" \
              --gsheet "https://docs.google.com/spreadsheets/d/1-p0CyUMC0nqrEQNc6Yikd2vg033GoChSWR8rFKFxfgU/edit#gid=1209202081"

  # Doesn't yet run in workflow
  create_attendee_flashcards:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          # Meetup API key set as envvar CTTO_MEETUP_API_KEY
          command: |
            pipenv run python cli.py next-meetup \
              --meetup-group-slug Civic-Tech-Toronto \
              --filter "civic hacknight" > .output
            MEETUP_EVENT_URL=$(cat .output | grep event_url | cut -d' ' -f2)

            ANKI_MEETUP_API_KEY=$CTTO_MEETUP_API_KEY \
              pipenv run anki-meetup-memorizer "$MEETUP_EVENT_URL" --yes --verbose > .output
            APKG_FILE=$(cat .output | grep output_filepath | cut -d' ' -f2)

            pipenv run python cli.py upload2gdrive "$APKG_FILE" --yes --verbose \
              --gdrive-folder "0B2riIxpG2GHERjFlRHYzTTJOa0E" \
              --google-creds service-key.json

  announce_booking_status:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          # Rebrandly key set as envvar CTTO_REBRANDLY_API_KEY
          command: |
            # Announce to #organizing-open
            pipenv run python cli.py announce-booking-status \
              --channel "C4SHX39B2" \
              --gsheet "https://docs.google.com/spreadsheets/d/1-p0CyUMC0nqrEQNc6Yikd2vg033GoChSWR8rFKFxfgU/edit#gid=0" \

  update_member_roster:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            # Update roster from #organizing-priv
            pipenv run python cli.py update-member-roster --yes --verbose \
              --channel "G08V58H6Y" \
              --gsheet "https://docs.google.com/spreadsheets/d/1LCVxEXuv70R-NozOwhNxZFtTZUmn1FLMPVD5wgIor9o/edit#gid=642523045" \

  # Doesn't yet run in workflow
  email_monthly_update:
    <<: *default_job
    steps:
      - checkout
      - run: {<<: *decrypt_files}
      - restore_cache: {<<: *restore_cache}
      - run: {<<: *install_dependencies}
      - save_cache: {<<: *save_cache}
      - run:
          name: run script
          command: |
            pipenv run python send_monthly_project_email.py
